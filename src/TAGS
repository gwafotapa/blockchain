
network.rs,792
pub struct Network {Network18,423
impl Network {Network24,561
    pub fn with_capacity(n: usize) -> Self {with_capacity25,576
    pub fn add(&mut self, node: Node) {add33,783
    pub fn random(nodes: usize) -> Self {random38,917
    pub fn run(&mut self) {run85,2585
    pub fn broadcast(&self, message: Message) {broadcast95,2843
    pub fn threads_mut(&mut self) -> &mut Vec<Option<JoinHandle<Node>>> {threads_mut102,3051
fn random_graph(vertices: usize) -> Graph {random_graph107,3164
// impl Drop for Network {Network143,4284
//     fn drop(&mut self) {drop144,4311
impl fmt::Debug for Network {Network162,4944
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt163,4974
mod test {test181,5459
    fn test_random_graph() {test_random_graph185,5501

node.rs,1342
pub struct Node {Node19,547
impl Eq for Node {}Node34,931
impl PartialEq for Node {Node36,952
    fn eq(&self, other: &Node) -> bool {eq37,978
impl Hash for Node {Node42,1072
    fn hash<H: Hasher>(&self, state: &mut H) {hash43,1093
impl Node {Node48,1186
    pub fn new(new49,1198
    pub fn run(&mut self) {run79,2058
    pub fn initiate(&mut self) -> Option<Transaction> {initiate161,6103
    pub fn propagate(&self, message: Message) {propagate210,8078
    pub fn id(&self) -> usize {id217,8303
    pub fn public_key(&self) -> &PublicKey {public_key221,8358
    pub fn secret_key(&self) -> &SecretKey {secret_key225,8435
    pub fn sender(&self) -> &Sender<Arc<Vec<u8>>> {sender229,8512
    pub fn listener(&self) -> &Receiver<Arc<Vec<u8>>> {listener233,8592
    pub fn neighbours(&self) -> &Vec<(usize, PublicKey, Sender<Arc<Vec<u8>>>)> {neighbours237,8678
    pub fn utxo_pool(&self) -> &UtxoPool {utxo_pool241,8791
    pub fn utxo_pool_mut(&mut self) -> &mut UtxoPool {utxo_pool_mut245,8865
    pub fn transaction_pool(&self) -> &TransactionPool {transaction_pool249,8955
    pub fn transaction_pool_mut(&mut self) -> &mut TransactionPool {transaction_pool_mut253,9050
    pub fn wallet(&self) -> &Wallet {wallet257,9161
    pub fn wallet_mut(&mut self) -> &mut Wallet {wallet_mut261,9227

wallet.rs,620
pub struct Wallet {Wallet7,153
impl Wallet {Wallet12,225
    pub fn new(public_key: PublicKey, utxos: Vec<Utxo>) -> Self {new13,239
    pub fn add(&mut self, utxo: Utxo) {add17,347
    pub fn remove(&mut self, input: &TransactionInput) {remove24,528
    pub fn process(&mut self, transaction: &Transaction) {process31,775
    pub fn process_all(&mut self, transactions: &[Transaction]) {}process_all47,1308
    pub fn undo_all(&mut self, transactions: &[Transaction]) {}undo_all49,1376
    pub fn public_key(&self) -> &PublicKey {public_key51,1441
    pub fn utxos(&self) -> &Vec<Utxo> {utxos55,1518

main.rs,23
fn main() {main8,135

chain.rs,1015
pub struct Blockchain {Blockchain9,151
impl Blockchain {Blockchain15,281
    pub fn new() -> Self {new16,299
    pub fn push(&mut self, block: Block) -> (Vec<Block>, Vec<Block>) {push28,596
    pub fn add(&mut self, block: Block) -> BlockHash {add33,763
    pub fn remove_orphans_of(&mut self, block_hash: BlockHash) -> Vec<Block> {remove_orphans_of52,1450
    pub fn transaction_delta(&self, old_top_hash: BlockHash) -> (Vec<Block>, Vec<Block>) {transaction_delta66,1863
    pub fn contains(&self, block: &Block) -> bool {contains86,2661
    pub fn parent(&self, block: &Block) -> Option<&Block> {parent90,2811
    pub fn common_parent<'a>(common_parent94,2926
    pub fn top(&self) -> &Block {top119,3787
    pub fn height(&self) -> usize {height123,3864
    pub fn len(&self) -> usize {len127,3935
    pub fn top_hash(&self) -> &BlockHash {top_hash131,4001
impl fmt::Display for Blockchain {Blockchain136,4076
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt137,4111

common.rs,1187
pub const GENESIS_BLOCK_HASH_PREV_BLOCK: [u8; 32] = [0u8; 32];GENESIS_BLOCK_HASH_PREV_BLOCK9,175
pub const MINE_NEW_BLOCK_PROBA: f64 = 1.0 / 1000000.0;MINE_NEW_BLOCK_PROBA10,238
pub const NODES: usize = 4;NODES11,293
pub const SIGNATURE_BYTES: usize = 64;SIGNATURE_BYTES12,321
pub const SPEND_PROBA: f64 = 1.0 / 1000000.0;SPEND_PROBA13,360
pub const TX_INPUT_BYTES: usize = UTXO_ID_BYTES + SIGNATURE_BYTES;TX_INPUT_BYTES14,406
pub const TX_OUTPUT_BYTES: usize = UTXO_DATA_BYTES;TX_OUTPUT_BYTES15,473
pub const TXS_PER_BLOCK: usize = 1 << 0;TXS_PER_BLOCK16,525
pub const UTXO_AMOUNT_INIT: u32 = 10;UTXO_AMOUNT_INIT17,566
pub const UTXO_DATA_BYTES: usize = 4 + 33;UTXO_DATA_BYTES18,604
pub const UTXO_HASH_INIT: [u8; 32] = [0u8; 32];UTXO_HASH_INIT19,647
pub const UTXO_ID_BYTES: usize = 32 + 8;UTXO_ID_BYTES20,695
const SHUT_DOWN: &[u8] = b"Shut down";SHUT_DOWN22,737
pub enum Message<'a> {Message24,777
impl<'a, B> From<B> for Message<'a>Message30,883
    fn from(bytes: B) -> Self {from34,947
impl<'a> Message<'a> {Message47,1365
    pub fn serialize(&self) -> Vec<u8> {serialize48,1388
    pub fn deserialize<T>(bytes: T) -> Selfdeserialize56,1650

transaction/pool.rs,1119
pub struct TransactionPool {TransactionPool10,199
impl TransactionPool {TransactionPool14,267
    pub fn new() -> Self {new15,290
    pub fn size(&self) -> usize {size21,387
    pub fn add(&mut self, transaction: Transaction) {add26,499
    pub fn remove(&mut self, transaction: &Transaction) -> Option<Transaction> {remove30,605
    pub fn contains(&self, transaction: &Transaction) -> bool {contains35,778
    pub fn position(&self, transaction: &Transaction) -> Option<usize> {position39,897
    pub fn select(&self) -> Option<Vec<Transaction>> {select43,1043
    pub fn add_all(&mut self, transactions: &[Transaction]) {}add_all55,1362
    pub fn remove_all(&mut self, transactions: &[Transaction]) {}remove_all57,1426
    pub fn transactions(&self) -> &Vec<Transaction> {transactions59,1493
impl Eq for TransactionPool {}TransactionPool64,1583
impl PartialEq for TransactionPool {TransactionPool66,1615
    fn eq(&self, other: &Self) -> bool {eq67,1652
impl Index<usize> for TransactionPool {TransactionPool74,1935
    fn index(&self, index: usize) -> &Self::Output {index77,2007

transaction/error.rs,476
pub enum InvalidTransaction {InvalidTransaction5,48
impl fmt::Display for InvalidTransaction {InvalidTransaction10,138
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt11,181
impl error::Error for InvalidTransaction {InvalidTransaction19,424
    fn source(&self) -> Option<&(dyn error::Error + 'static)> {source20,467
impl From<secp256k1::Error> for InvalidTransaction {InvalidTransaction28,695
    fn from(err: secp256k1::Error) -> Self {from29,748

transaction/mod.rs,1299
pub struct Transaction {Transaction17,442
impl Transaction {Transaction23,556
    pub fn new(inputs: Vec<TransactionInput>, outputs: Vec<TransactionOutput>) -> Self {new24,575
    pub fn serialize(&self) -> Vec<u8> {serialize40,1040
    pub fn deserialize<B>(bytes: B) -> (Self, usize)deserialize50,1471
    pub fn hash_merkle_root(transactions: &Vec<Self>) -> Hash {hash_merkle_root76,2380
    pub fn bytes(&self) -> usize {bytes82,2622
    pub fn id(&self) -> &Hash {id86,2758
    pub fn inputs(&self) -> &Vec<TransactionInput> {inputs90,2814
    pub fn outputs(&self) -> &Vec<TransactionOutput> {outputs94,2895
// impl<B> From<B> for TransactionTransaction99,2981
//     fn from(bytes: B) -> Self {from103,3053
impl Eq for Transaction {}Transaction127,3964
impl PartialEq for Transaction {Transaction129,3992
    fn eq(&self, other: &Self) -> bool {eq130,4025
impl fmt::Display for Transaction {Transaction135,4103
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt136,4139
impl HashTrait for Transaction {Transaction147,4474
    fn hash<H: Hasher>(&self, state: &mut H) {hash148,4507
pub mod error;error153,4592
pub mod input;input154,4607
pub mod merkle_tree;merkle_tree155,4622
pub mod output;output156,4643
pub mod pool;pool157,4659

transaction/output.rs,553
pub struct TransactionOutput(UtxoData);TransactionOutput7,93
impl TransactionOutput {TransactionOutput9,134
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new10,159
    pub fn serialize(&self) -> Vec<u8> {serialize14,275
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize18,350
    pub fn amount(&self) -> u32 {amount25,484
    pub fn public_key(&self) -> &PublicKey {public_key29,549
impl fmt::Display for TransactionOutput {TransactionOutput34,632
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt35,674

transaction/input.rs,729
pub struct TransactionInput {TransactionInput8,164
impl TransactionInput {TransactionInput13,238
    pub fn new(utxo_id: UtxoId, sig: Signature) -> Self {new14,262
    pub fn serialize(&self) -> Vec<u8> {serialize18,357
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,586
    pub fn utxo_id(&self) -> &UtxoId {utxo_id32,703
    pub fn sig(&self) -> &Signature {sig36,771
    pub fn txid(&self) -> &Hash {txid40,834
    pub fn vout(&self) -> usize {vout44,904
impl<B> From<B> for TransactionInputTransactionInput49,975
    fn from(bytes: B) -> Self {from53,1040
impl fmt::Display for TransactionInput {TransactionInput61,1274
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt62,1315

transaction/merkle_tree.rs,163
pub struct MergeHash {}MergeHash6,91
impl Merge for MergeHash {MergeHash8,116
    fn merge(left: &Self::Item, right: &Self::Item) -> Self::Item {merge11,166

block/mod.rs,1248
// const GENESIS_BLOCK_HASH_MERKLE_ROOT: &[u8; 32] =GENESIS_BLOCK_HASH_MERKLE_ROOT10,212
pub struct Block {Block14,372
impl Block {Block20,474
    pub fn genesis() -> Self {genesis21,487
    pub fn new(height: usize, hash_prev_block: Hash, transactions: Vec<Transaction>) -> Self {new33,897
    pub fn child(&self, transactions: Vec<Transaction>) -> Self {child47,1370
    //     pub fn hash_merkle_root(&self) -> Hash {hash_merkle_root51,1507
    pub fn hash(&self) -> Hash {hash55,1617
    pub fn serialize(&self) -> Vec<u8> {serialize63,1838
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize81,2587
    pub fn is_genesis(&self) -> bool {is_genesis88,2704
    pub fn height(&self) -> usize {height92,2775
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block96,2838
    pub fn transactions(&self) -> &Vec<Transaction> {transactions100,2929
impl Eq for Block {}Block105,3019
impl PartialEq for Block {Block107,3041
    fn eq(&self, other: &Self) -> bool {eq108,3068
impl<B> From<B> for BlockBlock113,3154
    fn from(bytes: B) -> Self {from117,3208
pub mod header;header140,3947
impl fmt::Display for Block {Block142,3964
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt143,3994

block/header.rs,423
pub struct BlockHeader {BlockHeader4,50
impl BlockHeader {BlockHeader10,155
    pub fn new(hash_prev_block: Hash) -> Self {new11,174
    pub fn serialize(&self) -> Vec<u8> {serialize15,262
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize19,348
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block26,465
impl<B> From<B> for BlockHeaderBlockHeader31,549
    fn from(bytes: B) -> Self {from35,609

lib.rs,251
pub mod block;block1,0
pub mod chain;chain2,15
pub mod common;common3,30
pub mod miner;miner4,46
pub mod network;network5,61
pub mod node;node6,78
pub mod transaction;transaction7,92
pub mod utxo;utxo8,113
pub mod wallet;wallet9,127

miner.rs,302
pub struct Miner {Miner7,124
impl Miner {Miner11,172
    pub fn new() -> Self {new12,185
    pub fn mine(&mut self, top: &Block, transaction_pool: &TransactionPool) -> Option<Block> {mine16,248
    pub fn mine_from(&mut self, top: &Block, transaction_pool: &TransactionPool) {mine_from29,664

utxo/id.rs,537
pub struct UtxoId {UtxoId8,152
impl UtxoId {UtxoId13,208
    pub fn new(txid: Hash, vout: usize) -> Self {new14,222
    pub fn serialize(&self) -> Vec<u8> {serialize18,307
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,520
    pub fn txid(&self) -> &Hash {txid32,637
    pub fn vout(&self) -> usize {vout36,697
impl<B> From<B> for UtxoIdUtxoId41,758
    fn from(bytes: B) -> Self {from45,813
impl fmt::Display for UtxoId {UtxoId53,1046
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1077

utxo/data.rs,583
pub struct UtxoData {UtxoData8,156
impl UtxoData {UtxoData13,225
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new14,241
    pub fn serialize(&self) -> Vec<u8> {serialize18,345
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,576
    pub fn amount(&self) -> u32 {amount32,693
    pub fn public_key(&self) -> &PublicKey {public_key36,754
impl<B> From<B> for UtxoDataUtxoData41,833
    fn from(bytes: B) -> Self {from45,890
impl fmt::Display for UtxoData {UtxoData53,1168
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1201

utxo/pool.rs,1102
pub struct UtxoPool {UtxoPool12,350
impl UtxoPool {UtxoPool16,412
    pub fn new(keys: Vec<PublicKey>) -> Self {new17,428
    pub fn add(&mut self, utxo: Utxo) {add32,841
    pub fn remove(&mut self, utxo: &Utxo) -> Option<UtxoData> {remove36,934
    pub fn contains(&self, utxo: Utxo) -> bool {contains40,1041
    pub fn owned_by(&self, pk: &PublicKey) -> Vec<Utxo> {owned_by44,1139
    pub fn process(&mut self, transaction: &Transaction) {process52,1391
    pub fn verify(&self, transaction: &Transaction) -> Result<(), InvalidTransaction> {verify63,1837
    pub fn validate(&self, block: &Block) -> Result<(), InvalidTransaction> {validate86,2728
    pub fn process_all(&mut self, transactions: &[Transaction]) {}process_all90,2828
    pub fn undo_all(&mut self, transactions: &[Transaction]) {}undo_all92,2896
impl Eq for UtxoPool {}UtxoPool95,2963
impl PartialEq for UtxoPool {UtxoPool97,2988
    fn eq(&self, other: &Self) -> bool {eq98,3018
impl fmt::Display for UtxoPool {UtxoPool105,3295
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt106,3328

utxo/mod.rs,610
pub struct Utxo {Utxo10,164
impl Utxo {Utxo15,221
    pub fn new(id: UtxoId, data: UtxoData) -> Self {new16,233
    pub fn id(&self) -> &UtxoId {id20,319
    pub fn data(&self) -> &UtxoData {data24,377
    pub fn txid(&self) -> &Hash {txid28,441
    pub fn vout(&self) -> usize {vout32,506
    pub fn amount(&self) -> u32 {amount36,570
    pub fn public_key(&self) -> &PublicKey {public_key40,638
impl Eq for Utxo {}Utxo45,724
impl PartialEq for Utxo {Utxo47,745
    fn eq(&self, other: &Self) -> bool {eq48,771
pub mod data;data53,849
pub mod id;id54,863
pub mod pool;pool55,875
