
network.rs,792
pub struct Network {Network18,423
impl Network {Network24,561
    pub fn with_capacity(n: usize) -> Self {with_capacity25,576
    pub fn add(&mut self, node: Node) {add33,783
    pub fn random(nodes: usize) -> Self {random38,917
    pub fn run(&mut self) {run85,2585
    pub fn broadcast(&self, message: Message) {broadcast95,2843
    pub fn threads_mut(&mut self) -> &mut Vec<Option<JoinHandle<Node>>> {threads_mut102,3051
fn random_graph(vertices: usize) -> Graph {random_graph107,3164
// impl Drop for Network {Network143,4284
//     fn drop(&mut self) {drop144,4311
impl fmt::Debug for Network {Network162,4944
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt163,4974
mod test {test181,5459
    fn test_random_graph() {test_random_graph185,5501

node.rs,1342
pub struct Node {Node19,547
impl Eq for Node {}Node34,931
impl PartialEq for Node {Node36,952
    fn eq(&self, other: &Node) -> bool {eq37,978
impl Hash for Node {Node42,1072
    fn hash<H: Hasher>(&self, state: &mut H) {hash43,1093
impl Node {Node48,1186
    pub fn new(new49,1198
    pub fn run(&mut self) {run79,2058
    pub fn initiate(&mut self) -> Option<Transaction> {initiate159,5991
    pub fn propagate(&self, message: Message) {propagate208,7966
    pub fn id(&self) -> usize {id215,8191
    pub fn public_key(&self) -> &PublicKey {public_key219,8246
    pub fn secret_key(&self) -> &SecretKey {secret_key223,8323
    pub fn sender(&self) -> &Sender<Arc<Vec<u8>>> {sender227,8400
    pub fn listener(&self) -> &Receiver<Arc<Vec<u8>>> {listener231,8480
    pub fn neighbours(&self) -> &Vec<(usize, PublicKey, Sender<Arc<Vec<u8>>>)> {neighbours235,8566
    pub fn utxo_pool(&self) -> &UtxoPool {utxo_pool239,8679
    pub fn utxo_pool_mut(&mut self) -> &mut UtxoPool {utxo_pool_mut243,8753
    pub fn transaction_pool(&self) -> &TransactionPool {transaction_pool247,8843
    pub fn transaction_pool_mut(&mut self) -> &mut TransactionPool {transaction_pool_mut251,8938
    pub fn wallet(&self) -> &Wallet {wallet255,9049
    pub fn wallet_mut(&mut self) -> &mut Wallet {wallet_mut259,9115

wallet.rs,816
pub struct Wallet {Wallet7,158
impl Wallet {Wallet12,230
    pub fn new(public_key: PublicKey, utxos: Vec<Utxo>) -> Self {new13,244
    pub fn add(&mut self, utxo: Utxo) {add18,407
    pub fn remove(&mut self, utxo: &Utxo) {remove25,588
    pub fn remove_utxo_from(&mut self, input: &TransactionInput) {remove_utxo_from32,770
    pub fn process(&mut self, transaction: &Transaction) {process39,1027
    pub fn process_all(&mut self, transactions: &[Transaction]) {process_all55,1570
    pub fn undo(&mut self, transaction: &Transaction, blockchain: &Blockchain) {undo61,1734
    pub fn undo_all(&mut self, transactions: &[Transaction], blockchain: &Blockchain) {undo_all78,2346
    pub fn public_key(&self) -> &PublicKey {public_key85,2615
    pub fn utxos(&self) -> &Vec<Utxo> {utxos89,2692

main.rs,24
fn main() {main15,289

chain.rs,1058
pub struct Blockchain {Blockchain11,231
impl Blockchain {Blockchain17,361
    pub fn new() -> Self {new18,379
    pub fn push(&mut self, block: Block) -> (Vec<Transaction>, Vec<Transaction>) {push30,676
    pub fn add(&mut self, block: Block) -> BlockHash {add35,855
    pub fn remove_orphans_of(&mut self, block_hash: BlockHash) -> Vec<Block> {remove_orphans_of54,1542
    pub fn transaction_delta(transaction_delta68,1955
    pub fn contains(&self, block: &Block) -> bool {contains91,2858
    pub fn parent(&self, block: &Block) -> Option<&Block> {parent95,3008
    pub fn common_parent<'a>(common_parent99,3123
    pub fn get_utxo_from(&self, input: &TransactionInput) -> Utxo {get_utxo_from124,3984
    pub fn top(&self) -> &Block {top134,4294
    pub fn height(&self) -> usize {height138,4371
    pub fn len(&self) -> usize {len142,4442
    pub fn top_hash(&self) -> &BlockHash {top_hash146,4508
impl fmt::Display for Blockchain {Blockchain151,4583
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt152,4618

common.rs,1187
pub const GENESIS_BLOCK_HASH_PREV_BLOCK: [u8; 32] = [0u8; 32];GENESIS_BLOCK_HASH_PREV_BLOCK9,175
pub const MINE_NEW_BLOCK_PROBA: f64 = 1.0 / 1000000.0;MINE_NEW_BLOCK_PROBA10,238
pub const NODES: usize = 4;NODES11,293
pub const SIGNATURE_BYTES: usize = 64;SIGNATURE_BYTES12,321
pub const SPEND_PROBA: f64 = 1.0 / 1000000.0;SPEND_PROBA13,360
pub const TX_INPUT_BYTES: usize = UTXO_ID_BYTES + SIGNATURE_BYTES;TX_INPUT_BYTES14,406
pub const TX_OUTPUT_BYTES: usize = UTXO_DATA_BYTES;TX_OUTPUT_BYTES15,473
pub const TXS_PER_BLOCK: usize = 1 << 0;TXS_PER_BLOCK16,525
pub const UTXO_AMOUNT_INIT: u32 = 10;UTXO_AMOUNT_INIT17,566
pub const UTXO_DATA_BYTES: usize = 4 + 33;UTXO_DATA_BYTES18,604
pub const UTXO_HASH_INIT: [u8; 32] = [0u8; 32];UTXO_HASH_INIT19,647
pub const UTXO_ID_BYTES: usize = 32 + 8;UTXO_ID_BYTES20,695
const SHUT_DOWN: &[u8] = b"Shut down";SHUT_DOWN22,737
pub enum Message<'a> {Message24,777
impl<'a, B> From<B> for Message<'a>Message30,883
    fn from(bytes: B) -> Self {from34,947
impl<'a> Message<'a> {Message47,1365
    pub fn serialize(&self) -> Vec<u8> {serialize48,1388
    pub fn deserialize<T>(bytes: T) -> Selfdeserialize56,1650

transaction/pool.rs,1119
pub struct TransactionPool {TransactionPool11,245
impl TransactionPool {TransactionPool15,313
    pub fn new() -> Self {new16,336
    pub fn size(&self) -> usize {size22,433
    pub fn add(&mut self, transaction: Transaction) {add27,545
    pub fn remove(&mut self, transaction: &Transaction) -> Option<Transaction> {remove31,651
    pub fn contains(&self, transaction: &Transaction) -> bool {contains36,824
    pub fn position(&self, transaction: &Transaction) -> Option<usize> {position40,943
    pub fn select(&self) -> Option<Vec<Transaction>> {select44,1089
    pub fn add_all(&mut self, transactions: Vec<Transaction>) {add_all56,1408
    pub fn remove_all(&mut self, transactions: &[Transaction]) {remove_all62,1565
    pub fn transactions(&self) -> &Vec<Transaction> {transactions68,1727
impl Eq for TransactionPool {}TransactionPool73,1817
impl PartialEq for TransactionPool {TransactionPool75,1849
    fn eq(&self, other: &Self) -> bool {eq76,1886
impl Index<usize> for TransactionPool {TransactionPool83,2169
    fn index(&self, index: usize) -> &Self::Output {index86,2241

transaction/error.rs,460
pub enum TransactionError {TransactionError5,48
impl fmt::Display for TransactionError {TransactionError10,136
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt11,177
impl error::Error for TransactionError {TransactionError19,416
    fn source(&self) -> Option<&(dyn error::Error + 'static)> {source20,457
impl From<secp256k1::Error> for TransactionError {TransactionError28,681
    fn from(err: secp256k1::Error) -> Self {from29,732

transaction/mod.rs,1299
pub struct Transaction {Transaction17,440
impl Transaction {Transaction23,554
    pub fn new(inputs: Vec<TransactionInput>, outputs: Vec<TransactionOutput>) -> Self {new24,573
    pub fn serialize(&self) -> Vec<u8> {serialize40,1038
    pub fn deserialize<B>(bytes: B) -> (Self, usize)deserialize50,1469
    pub fn hash_merkle_root(transactions: &Vec<Self>) -> Hash {hash_merkle_root76,2378
    pub fn bytes(&self) -> usize {bytes82,2620
    pub fn id(&self) -> &Hash {id86,2756
    pub fn inputs(&self) -> &Vec<TransactionInput> {inputs90,2812
    pub fn outputs(&self) -> &Vec<TransactionOutput> {outputs94,2893
// impl<B> From<B> for TransactionTransaction99,2979
//     fn from(bytes: B) -> Self {from103,3051
impl Eq for Transaction {}Transaction127,3962
impl PartialEq for Transaction {Transaction129,3990
    fn eq(&self, other: &Self) -> bool {eq130,4023
impl fmt::Display for Transaction {Transaction135,4101
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt136,4137
impl HashTrait for Transaction {Transaction147,4472
    fn hash<H: Hasher>(&self, state: &mut H) {hash148,4505
pub mod error;error153,4590
pub mod input;input154,4605
pub mod merkle_tree;merkle_tree155,4620
pub mod output;output156,4641
pub mod pool;pool157,4657

transaction/output.rs,559
pub struct TransactionOutput(pub UtxoData);TransactionOutput8,165
impl TransactionOutput {TransactionOutput10,210
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new11,235
    pub fn serialize(&self) -> Vec<u8> {serialize15,351
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize19,426
    pub fn amount(&self) -> u32 {amount26,560
    pub fn public_key(&self) -> &PublicKey {public_key30,625
impl fmt::Display for TransactionOutput {TransactionOutput35,708
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt36,750

transaction/input.rs,729
pub struct TransactionInput {TransactionInput8,164
impl TransactionInput {TransactionInput13,238
    pub fn new(utxo_id: UtxoId, sig: Signature) -> Self {new14,262
    pub fn serialize(&self) -> Vec<u8> {serialize18,357
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,586
    pub fn utxo_id(&self) -> &UtxoId {utxo_id32,703
    pub fn sig(&self) -> &Signature {sig36,771
    pub fn txid(&self) -> &Hash {txid40,834
    pub fn vout(&self) -> usize {vout44,904
impl<B> From<B> for TransactionInputTransactionInput49,975
    fn from(bytes: B) -> Self {from53,1040
impl fmt::Display for TransactionInput {TransactionInput61,1274
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt62,1315

transaction/merkle_tree.rs,163
pub struct MergeHash {}MergeHash6,91
impl Merge for MergeHash {MergeHash8,116
    fn merge(left: &Self::Item, right: &Self::Item) -> Self::Item {merge11,166

block/error.rs,412
pub enum BlockError {BlockError6,97
impl fmt::Display for BlockError {BlockError11,191
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt12,226
impl error::Error for BlockError {BlockError22,525
    fn source(&self) -> Option<&(dyn error::Error + 'static)> {source23,560
impl From<TransactionError> for BlockError {BlockError31,784
    fn from(err: TransactionError) -> Self {from32,829

block/mod.rs,1456
// const GENESIS_BLOCK_HASH_MERKLE_ROOT: &[u8; 32] =GENESIS_BLOCK_HASH_MERKLE_ROOT13,299
pub struct Block {Block17,459
impl Block {Block23,561
    pub fn genesis() -> Self {genesis24,574
    pub fn new(height: usize, hash_prev_block: Hash, transactions: Vec<Transaction>) -> Self {new36,984
    pub fn get_utxo_from(&self, input: &TransactionInput) -> Option<Utxo> {get_utxo_from50,1457
    // pub fn child(&self, transactions: Vec<Transaction>) -> Self {child64,1973
    //     pub fn hash_merkle_root(&self) -> Hash {hash_merkle_root68,2119
    pub fn hash(&self) -> Hash {hash72,2229
    pub fn serialize(&self) -> Vec<u8> {serialize80,2450
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize98,3199
    pub fn is_genesis(&self) -> bool {is_genesis105,3316
    pub fn transaction_count(&self) -> usize {transaction_count109,3387
    pub fn height(&self) -> usize {height113,3473
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block117,3536
    pub fn transactions(&self) -> &Vec<Transaction> {transactions121,3627
impl Eq for Block {}Block126,3717
impl PartialEq for Block {Block128,3739
    fn eq(&self, other: &Self) -> bool {eq129,3766
impl<B> From<B> for BlockBlock134,3852
    fn from(bytes: B) -> Self {from138,3906
impl fmt::Display for Block {Block161,4645
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt162,4675
pub mod error;error180,5164
pub mod header;header181,5179

block/header.rs,423
pub struct BlockHeader {BlockHeader4,50
impl BlockHeader {BlockHeader10,155
    pub fn new(hash_prev_block: Hash) -> Self {new11,174
    pub fn serialize(&self) -> Vec<u8> {serialize15,262
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize19,348
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block26,465
impl<B> From<B> for BlockHeaderBlockHeader31,549
    fn from(bytes: B) -> Self {from35,609

lib.rs,251
pub mod block;block1,0
pub mod chain;chain2,15
pub mod common;common3,30
pub mod miner;miner4,46
pub mod network;network5,61
pub mod node;node6,78
pub mod transaction;transaction7,92
pub mod utxo;utxo8,113
pub mod wallet;wallet9,127

miner.rs,302
pub struct Miner {Miner7,124
impl Miner {Miner11,172
    pub fn new() -> Self {new12,185
    pub fn mine(&mut self, top: &Block, transaction_pool: &TransactionPool) -> Option<Block> {mine16,248
    pub fn mine_from(&mut self, top: &Block, transaction_pool: &TransactionPool) {mine_from29,664

utxo/id.rs,537
pub struct UtxoId {UtxoId8,152
impl UtxoId {UtxoId13,208
    pub fn new(txid: Hash, vout: usize) -> Self {new14,222
    pub fn serialize(&self) -> Vec<u8> {serialize18,307
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,520
    pub fn txid(&self) -> &Hash {txid32,637
    pub fn vout(&self) -> usize {vout36,697
impl<B> From<B> for UtxoIdUtxoId41,758
    fn from(bytes: B) -> Self {from45,813
impl fmt::Display for UtxoId {UtxoId53,1046
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1077

utxo/data.rs,583
pub struct UtxoData {UtxoData8,156
impl UtxoData {UtxoData13,225
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new14,241
    pub fn serialize(&self) -> Vec<u8> {serialize18,345
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,576
    pub fn amount(&self) -> u32 {amount32,693
    pub fn public_key(&self) -> &PublicKey {public_key36,754
impl<B> From<B> for UtxoDataUtxoData41,833
    fn from(bytes: B) -> Self {from45,890
impl fmt::Display for UtxoData {UtxoData53,1168
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1201

utxo/pool.rs,1215
pub struct UtxoPool {UtxoPool13,392
impl UtxoPool {UtxoPool17,454
    pub fn new(keys: Vec<PublicKey>) -> Self {new18,470
    pub fn add(&mut self, utxo: Utxo) {add33,883
    pub fn remove(&mut self, utxo: &Utxo) -> Option<UtxoData> {remove37,976
    pub fn contains(&self, utxo: Utxo) -> bool {contains41,1083
    pub fn owned_by(&self, pk: &PublicKey) -> Vec<Utxo> {owned_by45,1181
    pub fn process(&mut self, transaction: &Transaction) {process53,1433
    pub fn undo(&mut self, transaction: &Transaction, blockchain: &Blockchain) {undo65,1970
    pub fn verify(&self, transaction: &Transaction) -> Result<(), TransactionError> {verify78,2511
    pub fn validate(&self, block: &Block) -> Result<(), BlockError> {validate101,3398
    pub fn process_all(&mut self, transactions: &[Transaction]) {process_all111,3716
    pub fn undo_all(&mut self, transactions: &[Transaction], blockchain: &Blockchain) {undo_all117,3880
impl Eq for UtxoPool {}UtxoPool124,4077
impl PartialEq for UtxoPool {UtxoPool126,4102
    fn eq(&self, other: &Self) -> bool {eq127,4132
impl fmt::Display for UtxoPool {UtxoPool134,4409
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt135,4442

utxo/mod.rs,610
pub struct Utxo {Utxo10,164
impl Utxo {Utxo15,221
    pub fn new(id: UtxoId, data: UtxoData) -> Self {new16,233
    pub fn id(&self) -> &UtxoId {id20,319
    pub fn data(&self) -> &UtxoData {data24,377
    pub fn txid(&self) -> &Hash {txid29,491
    pub fn vout(&self) -> usize {vout33,556
    pub fn amount(&self) -> u32 {amount37,620
    pub fn public_key(&self) -> &PublicKey {public_key41,688
impl Eq for Utxo {}Utxo46,774
impl PartialEq for Utxo {Utxo48,795
    fn eq(&self, other: &Self) -> bool {eq49,821
pub mod data;data54,899
pub mod id;id55,913
pub mod pool;pool56,925
