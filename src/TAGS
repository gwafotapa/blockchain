
network.rs,798
pub struct Network {Network18,423
impl Network {Network24,561
    pub fn with_capacity(n: usize) -> Network {with_capacity25,576
    pub fn add(&mut self, node: Node) {add33,786
    pub fn random(nodes: usize) -> Network {random38,920
    pub fn run(&mut self) {run85,2591
    pub fn broadcast(&self, message: Message) {broadcast95,2849
    pub fn threads_mut(&mut self) -> &mut Vec<Option<JoinHandle<Node>>> {threads_mut102,3057
fn random_graph(vertices: usize) -> Graph {random_graph107,3170
// impl Drop for Network {Network143,4290
//     fn drop(&mut self) {drop144,4317
impl fmt::Debug for Network {Network162,4950
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt163,4980
mod test {test181,5465
    fn test_random_graph() {test_random_graph185,5507

node.rs,1528
pub struct Node {Node19,569
impl Eq for Node {}Node33,935
impl PartialEq for Node {Node35,956
    fn eq(&self, other: &Node) -> bool {eq36,982
impl Hash for Node {Node41,1076
    fn hash<H: Hasher>(&self, state: &mut H) {hash42,1097
impl Node {Node47,1190
    pub fn new(new48,1202
    pub fn run(&mut self) {run76,2009
    pub fn initiate(&mut self) -> Option<Transaction> {initiate139,4916
    pub fn mine(&mut self) -> Option<Block> {mine188,6891
    pub fn id(&self) -> usize {id201,7329
    pub fn public_key(&self) -> &PublicKey {public_key205,7384
    pub fn secret_key(&self) -> &SecretKey {secret_key209,7461
    pub fn sender(&self) -> &Sender<Arc<Vec<u8>>> {sender213,7538
    pub fn listener(&self) -> &Receiver<Arc<Vec<u8>>> {listener217,7618
    pub fn neighbours(&self) -> &[(usize, PublicKey, Sender<Arc<Vec<u8>>>)] {neighbours221,7704
    pub fn utxo_pool(&self) -> &UtxoPool {utxo_pool225,7814
    pub fn utxo_pool_mut(&mut self) -> &mut UtxoPool {utxo_pool_mut229,7888
    pub fn transaction_pool(&self) -> &TransactionPool {transaction_pool233,7978
    pub fn transaction_pool_mut(&mut self) -> &mut TransactionPool {transaction_pool_mut237,8073
    pub fn wallet(&self) -> &Wallet {wallet241,8184
    pub fn wallet_mut(&mut self) -> &mut Wallet {wallet_mut245,8250
    pub fn propagate(&self, message: Message) {propagate249,8332
    // pub fn blockchain(&self) -> &Blockchain {blockchain256,8557
    // pub fn synchronize(&mut self) {synchronize260,8644

wallet.rs,449
pub struct Wallet {Wallet6,128
impl Wallet {Wallet11,200
    pub fn new(public_key: PublicKey, utxos: Vec<Utxo>) -> Self {new12,214
    pub fn add(&mut self, utxo: Utxo) {add16,322
    pub fn remove(&mut self, input: &TransactionInput) {remove23,503
    pub fn process(&mut self, transaction: &Transaction) {process30,750
    pub fn public_key(&self) -> &PublicKey {public_key46,1283
    pub fn utxos(&self) -> &[Utxo] {utxos50,1360

main.rs,23
fn main() {main8,135

chain.rs,520
pub struct Blockchain {Blockchain6,96
impl Blockchain {Blockchain12,226
    pub fn new() -> Self {new13,244
    pub fn push(&mut self, block: Block) {push25,541
    pub fn push_orphans_of(&mut self, parent: &Block) {push_orphans_of39,1044
    pub fn contains(&self, block: &Block) -> bool {contains57,1624
    pub fn top(&self) -> &Block {top61,1774
    pub fn height(&self) -> usize {height65,1851
    pub fn len(&self) -> usize {len69,1922
    pub fn top_hash(&self) -> &BlockHash {top_hash73,1988

common.rs,1125
pub const GENESIS_BLOCK_HASH_PREV_BLOCK: [u8; 32] = [0u8; 32];GENESIS_BLOCK_HASH_PREV_BLOCK9,175
pub const MINE_NEW_BLOCK_PROBA: f64 = 1.0 / 1000000.0;MINE_NEW_BLOCK_PROBA10,238
pub const NODES: usize = 4;NODES11,293
pub const SIGNATURE_BYTES: usize = 64;SIGNATURE_BYTES12,321
pub const SPEND_PROBA: f64 = 1.0 / 1000000.0;SPEND_PROBA13,360
pub const TX_INPUT_BYTES: usize = UTXO_ID_BYTES + SIGNATURE_BYTES;TX_INPUT_BYTES14,406
pub const TX_OUTPUT_BYTES: usize = UTXO_DATA_BYTES;TX_OUTPUT_BYTES15,473
pub const UTXO_AMOUNT_INIT: u32 = 10;UTXO_AMOUNT_INIT16,525
pub const UTXO_DATA_BYTES: usize = 4 + 33;UTXO_DATA_BYTES17,563
pub const UTXO_HASH_INIT: [u8; 32] = [0u8; 32];UTXO_HASH_INIT18,606
pub const UTXO_ID_BYTES: usize = 32 + 8;UTXO_ID_BYTES19,654
const SHUT_DOWN: &[u8] = b"Shut down";SHUT_DOWN21,696
pub enum Message<'a> {Message23,736
impl<'a, B> From<B> for Message<'a>Message29,842
    fn from(bytes: B) -> Self {from33,906
impl<'a> Message<'a> {Message46,1322
    pub fn serialize(&self) -> Vec<u8> {serialize47,1345
    pub fn deserialize<T>(bytes: T) -> Selfdeserialize55,1607

transaction/pool.rs,880
pub struct TransactionPool {TransactionPool8,137
impl TransactionPool {TransactionPool12,205
    pub fn new() -> Self {new13,228
    pub fn size(&self) -> usize {size19,325
    pub fn add(&mut self, transaction: Transaction) {add23,398
    pub fn remove(&mut self, transaction: &Transaction) -> Option<Transaction> {remove27,504
    pub fn contains(&self, transaction: &Transaction) -> bool {contains32,677
    pub fn position(&self, transaction: &Transaction) -> Option<usize> {position36,796
    pub fn transactions(&self) -> &[Transaction] {transactions40,942
impl Eq for TransactionPool {}TransactionPool45,1029
impl PartialEq for TransactionPool {TransactionPool47,1061
    fn eq(&self, other: &Self) -> bool {eq48,1098
impl Index<usize> for TransactionPool {TransactionPool55,1381
    fn index(&self, index: usize) -> &Self::Output {index58,1453

transaction/error.rs,476
pub enum InvalidTransaction {InvalidTransaction5,48
impl fmt::Display for InvalidTransaction {InvalidTransaction10,138
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt11,181
impl error::Error for InvalidTransaction {InvalidTransaction19,424
    fn source(&self) -> Option<&(dyn error::Error + 'static)> {source20,467
impl From<secp256k1::Error> for InvalidTransaction {InvalidTransaction28,695
    fn from(err: secp256k1::Error) -> Self {from29,748

transaction/mod.rs,1228
pub struct Transaction {Transaction17,442
impl Transaction {Transaction23,556
    pub fn new(inputs: Vec<TransactionInput>, outputs: Vec<TransactionOutput>) -> Self {new24,575
    pub fn serialize(&self) -> Vec<u8> {serialize40,1040
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize49,1408
    pub fn hash_merkle_root(transactions: &Vec<Self>) -> Hash {hash_merkle_root56,1525
    pub fn id(&self) -> &Hash {id62,1767
    pub fn inputs(&self) -> &[TransactionInput] {inputs66,1823
    pub fn outputs(&self) -> &[TransactionOutput] {outputs70,1901
impl<B> From<B> for TransactionTransaction75,1984
    fn from(bytes: B) -> Self {from79,2044
impl Eq for Transaction {}Transaction101,2792
impl PartialEq for Transaction {Transaction103,2820
    fn eq(&self, other: &Self) -> bool {eq104,2853
impl fmt::Display for Transaction {Transaction109,2931
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt110,2967
impl HashTrait for Transaction {Transaction121,3302
    fn hash<H: Hasher>(&self, state: &mut H) {hash122,3335
pub mod error;error127,3420
pub mod input;input128,3435
pub mod merkle_tree;merkle_tree129,3450
pub mod output;output130,3471
pub mod pool;pool131,3487

transaction/output.rs,553
pub struct TransactionOutput(UtxoData);TransactionOutput7,93
impl TransactionOutput {TransactionOutput9,134
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new10,159
    pub fn serialize(&self) -> Vec<u8> {serialize14,275
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize18,350
    pub fn amount(&self) -> u32 {amount25,484
    pub fn public_key(&self) -> &PublicKey {public_key29,549
impl fmt::Display for TransactionOutput {TransactionOutput34,632
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt35,674

transaction/input.rs,729
pub struct TransactionInput {TransactionInput8,164
impl TransactionInput {TransactionInput13,238
    pub fn new(utxo_id: UtxoId, sig: Signature) -> Self {new14,262
    pub fn serialize(&self) -> Vec<u8> {serialize18,357
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,586
    pub fn utxo_id(&self) -> &UtxoId {utxo_id32,703
    pub fn sig(&self) -> &Signature {sig36,771
    pub fn txid(&self) -> &Hash {txid40,834
    pub fn vout(&self) -> usize {vout44,904
impl<B> From<B> for TransactionInputTransactionInput49,975
    fn from(bytes: B) -> Self {from53,1040
impl fmt::Display for TransactionInput {TransactionInput61,1274
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt62,1315

transaction/merkle_tree.rs,163
pub struct MergeHash {}MergeHash6,91
impl Merge for MergeHash {MergeHash8,116
    fn merge(left: &Self::Item, right: &Self::Item) -> Self::Item {merge11,166

block/mod.rs,951
// const GENESIS_BLOCK_HASH_MERKLE_ROOT: &[u8; 32] =GENESIS_BLOCK_HASH_MERKLE_ROOT10,212
pub struct Block {Block14,372
impl Block {Block20,477
    pub fn genesis() -> Self {genesis21,490
    pub fn new(height: usize, hash_prev_block: Hash) -> Self {new33,903
    pub fn height(&self) -> usize {height46,1335
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block50,1398
    //     pub fn hash_merkle_root(&self) -> Hash {hash_merkle_root54,1489
    //     pub fn transactions(&self) -> &Vec<Transaction> {transactions58,1599
    pub fn hash(&self) -> Hash {hash62,1708
    pub fn serialize(&self) -> Vec<u8> {serialize70,1929
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize86,2529
impl<B> From<B> for BlockBlock94,2648
    fn from(bytes: B) -> Self {from98,2702
pub mod header;header108,2990
impl fmt::Display for Block {Block110,3007
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt111,3037

block/header.rs,423
pub struct BlockHeader {BlockHeader4,50
impl BlockHeader {BlockHeader10,155
    pub fn new(hash_prev_block: Hash) -> Self {new11,174
    pub fn serialize(&self) -> Vec<u8> {serialize15,262
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize19,348
    pub fn hash_prev_block(&self) -> &Hash {hash_prev_block26,465
impl<B> From<B> for BlockHeaderBlockHeader31,549
    fn from(bytes: B) -> Self {from35,609

lib.rs,224
pub mod block;block1,0
pub mod chain;chain2,15
pub mod common;common3,30
pub mod network;network4,46
pub mod node;node5,63
pub mod transaction;transaction6,77
pub mod utxo;utxo7,98
pub mod wallet;wallet8,112

utxo/id.rs,537
pub struct UtxoId {UtxoId8,152
impl UtxoId {UtxoId13,208
    pub fn new(txid: Hash, vout: usize) -> Self {new14,222
    pub fn serialize(&self) -> Vec<u8> {serialize18,307
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,520
    pub fn txid(&self) -> &Hash {txid32,637
    pub fn vout(&self) -> usize {vout36,697
impl<B> From<B> for UtxoIdUtxoId41,758
    fn from(bytes: B) -> Self {from45,813
impl fmt::Display for UtxoId {UtxoId53,1046
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1077

utxo/data.rs,583
pub struct UtxoData {UtxoData8,156
impl UtxoData {UtxoData13,225
    pub fn new(amount: u32, public_key: PublicKey) -> Self {new14,241
    pub fn serialize(&self) -> Vec<u8> {serialize18,345
    pub fn deserialize<B>(bytes: B) -> Selfdeserialize25,576
    pub fn amount(&self) -> u32 {amount32,693
    pub fn public_key(&self) -> &PublicKey {public_key36,754
impl<B> From<B> for UtxoDataUtxoData41,833
    fn from(bytes: B) -> Self {from45,890
impl fmt::Display for UtxoData {UtxoData53,1168
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt54,1201

utxo/pool.rs,934
pub struct UtxoPool {UtxoPool12,350
impl UtxoPool {UtxoPool16,412
    pub fn new(keys: Vec<PublicKey>) -> Self {new17,428
    pub fn add(&mut self, utxo: Utxo) {add32,841
    pub fn remove(&mut self, utxo: &Utxo) -> Option<UtxoData> {remove36,934
    pub fn contains(&self, utxo: Utxo) -> bool {contains40,1041
    pub fn owned_by(&self, pk: &PublicKey) -> Vec<Utxo> {owned_by44,1139
    pub fn process(&mut self, transaction: &Transaction) {process52,1391
    pub fn verify(&self, transaction: &Transaction) -> Result<(), InvalidTransaction> {verify63,1837
    pub fn validate(&self, block: &Block) -> Result<(), InvalidTransaction> {validate86,2728
impl Eq for UtxoPool {}UtxoPool91,2830
impl PartialEq for UtxoPool {UtxoPool93,2855
    fn eq(&self, other: &Self) -> bool {eq94,2885
impl fmt::Display for UtxoPool {UtxoPool101,3162
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {fmt102,3195

utxo/mod.rs,610
pub struct Utxo {Utxo10,164
impl Utxo {Utxo15,221
    pub fn new(id: UtxoId, data: UtxoData) -> Self {new16,233
    pub fn id(&self) -> &UtxoId {id20,319
    pub fn data(&self) -> &UtxoData {data24,377
    pub fn txid(&self) -> &Hash {txid28,441
    pub fn vout(&self) -> usize {vout32,506
    pub fn amount(&self) -> u32 {amount36,570
    pub fn public_key(&self) -> &PublicKey {public_key40,638
impl Eq for Utxo {}Utxo45,724
impl PartialEq for Utxo {Utxo47,745
    fn eq(&self, other: &Self) -> bool {eq48,771
pub mod data;data53,849
pub mod id;id54,863
pub mod pool;pool55,875
